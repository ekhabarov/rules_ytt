name: Main CI
on:
  push:
    branches:
      - main
  pull_request:
    types:
      - labeled
      - unlabeled
      - opened
      - edited
      - reopened
      - synchronize
      - ready_for_review

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  bumper:
    name: Validate Release Label and Notes
    runs-on: ubuntu-22.04
    outputs:
      version: ${{ steps.bump.outputs.version }}
    steps:
      - uses: actions/checkout@v4

      - name: Set bump mode
        id: mode
        run: |
          [[ ${{ github.ref }} == 'refs/heads/main' ]] && M="bump" || M="validate";
          echo "bump_mode=$M" >> $GITHUB_OUTPUT

      - uses: jefflinse/pr-semver-bump@v1.6.0
        name: Validate Pull Request Metadata
        id: bump
        with:
          mode: ${{ steps.mode.outputs.bump_mode }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          major-label: major release
          minor-label: minor release
          patch-label: patch release
          noop-labels: not-a-release
          release-notes-prefix: -- begin release notes --
          release-notes-suffix: -- end release notes --
          with-v: true
          base-branch: true

  build:
    name: Build and Test
    runs-on: ubuntu-22.04
    needs:
      - bumper

    steps:
    - name: Checkout sources
      uses: actions/checkout@v4

    - name: Cache Bazel
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/bazel
          ~/.cache/bazel-repo
        key: bazel-cache-${{ hashFiles('MODULE.bazel', '.bazelversion', 'WORKSPACE') }}
        restore-keys: bazel-cache-

    - name: Build everything
      # env:
        # Bazelisk will download bazel to here.
        # XDG_CACHE_HOME: ~/.cache/bazel-repo
      run: bazel --bazelrc=.github/workflows/ci.bazelrc --bazelrc=.bazelrc build //...

    - name: Test everything
      # env:
        # Bazelisk will download bazel to here.
        # XDG_CACHE_HOME: ~/.cache/bazel-repo
      run: bazel --bazelrc=.github/workflows/ci.bazelrc --bazelrc=.bazelrc test //...

  release:
    name: Release
    runs-on: ubuntu-22.04
    if: ${{ github.ref == 'refs/heads/main' && needs.bumper.version != 'vnull' }}
    needs:
      - bumper
      - build
    steps:
    - name: Checkout sources
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Prepare release notes and artifacts
      run: .github/workflows/release_prep.sh ${{ needs.bumper.outputs.version }} > release_notes.txt

    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ needs.bumper.outputs.version }}
        generate_release_notes: true
        body_path: release_notes.txt
        fail_on_unmatched_files: true
        files: rules_ytt-*.tar.gz
